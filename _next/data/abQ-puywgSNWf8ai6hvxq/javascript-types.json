{"pageProps":{"userId":1,"id":4,"date":"July 27, 2022","slug":"javascript-types","title":"The 7 types in Javascript","description":"Like all programming languages, JavaScript has types. But types in JavaScript are not explicitly declared ...","body":"<br><br><p>Like all programming languages, JavaScript has types. But types in JavaScript are not explicitly declared. JavaScript decides on its type dynamically based on context. Understanding types helps you debug code many code errors are type related. Below see how to declare and find out a type in JavaScript.<br><br>First to store a value in a JavaScript variable.<br><pre><code>var example = 123</code></pre><br>Then to find out its type use <code>typeof</code>. Store type in a new variable and output to console.<br><br><pre><code>var findType = typeof example <br>console.log(findType)</code></pre><br>There are seven types in JavaScript. Below I have listed and described each one in more detail.<br><br><p><strong>1. Number </strong><br> A number can be any value that is a 64-bit binary format IEEE 754 value between <code>-2^53 - 1</code> and <code>2^53 - 1</code>. Also <code>infinity</code>, <code>-infinity</code> and <code>NaN</code> are considered number types. Numbers are stored without quotation marks.</p><p><strong>2. String </strong><br> Anything that is stored between a single <code>''</code> or double <code>\"\"</code> quotations marks is considered a string in JavaScript. So <code>'abc'</code> and  <code>\"abc\"</code> would be considered a string. </p><p><strong>3. Object</strong> <br> JavaScript Objects are declared between a parenthesis <code>{}</code> as key value pairs separated by a colon <code>:</code> . Multiple key value pairs can be stored between the parenthesis. See example below. <pre><code>var house= {type:'Flat', address:'500 street road, city'}</code></pre></p><p><strong>4. Boolean </strong><br> The values <code>true</code> and <code>false</code> without quotation marks are considered the two values as a Boolean type. Boolean values are often returned when you perform a comparison operator such as below.<pre><code>51 > 26; // return true 130 === 15; // return false</code></pre><p><strong>5. Undefined </strong><br> Any variable declared in JavaScript which is not assigned a value has the value <code>undefined</code>.</p><p><strong>6. Null </strong><br> In JavaScript <code>null</code> is an assignment value. It can be assigned to a variable as a representation of no value.<p><p><strong>7. Symbol </strong> (new in es6)<br> Symbols in JavaScript are defined in the following way. <pre><code>var example = Symbol(desc);</code></pre><br>They are used as object keys. This has the advantage of avoiding code duplication.</p></p>"},"__N_SSG":true}